{
  "compilerOptions": {
    // "allowJs": true,
    "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
    "baseUrl": ".", // 解析非相对模块名的基准目录
    "declaration": true,
    "emitDeclarationOnly": true,
    "esModuleInterop": true,
    "importHelpers": true, // 从 tslib 导入辅助工具函数（比如 __extends， __rest等）
    "module": "commonjs", // 指定生成哪个模块系统代码
    "moduleResolution": "node", // 决定如何处理模块。
    "strict": true, // 启用所有严格类型检查选项。 --strict相当于启用 --noImplicitAny, --noImplicitThis, --alwaysStrict，--strictNullChecks和 --strictFunctionTypes和--strictPropertyInitialization。
    "noImplicitAny": false, //关闭implicitly has an 'any' type
    "jsx": "preserve", // 支持jsx语法
    // "sourceMap": true, // 生成相应的 .map文件。
    "outDir": "types",
    "skipLibCheck": true, // 忽略所有的声明文件（ *.d.ts）的类型检查。
    "target": "esnext", // 指定ECMAScript目标版本 esnext
    "types": [ // 要包含的类型声明文件名列表
      "node",
      //   "vite/client"
    ],
    "typeRoots": [
      "../node_modules/@types"
    ],
    "isolatedModules": true,
    "paths": { // 模块名到基于 baseUrl的路径映射的列表。
      "@/*": [
        "src/*"
      ],
      "c/*": [
        "components/*"
      ],
      "_c/*": [
        "src/components/*"
      ],
      "types/*": [
        "components/types/*"
      ]
    },
    "lib": [ // 编译过程中需要引入的库文件的列表。
      // "ESNext",
      // "DOM",
      // "DOM.Iterable",
      // "ScriptHost"
      "es2017",
      "es7",
      "es6",
      "dom"
    ]
  },
  "include": [ // 解析的文件
    "components/**/*",
    "src/**/*",
    "components/types/**/*"
  ],
  "exclude": [
    "node_modules"
  ]
}